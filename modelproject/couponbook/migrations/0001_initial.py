# Generated by Django 5.2.5 on 2025-08-21 12:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CouponTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_until', models.DateTimeField(blank=True, help_text='쿠폰의 유효기간입니다.', null=True)),
                ('first_n_persons', models.PositiveIntegerField(default=0, help_text='선착순 몇명까지 쿠폰이 발급한지를 의미합니다.')),
                ('is_on', models.BooleanField(default=True, help_text='게시 중/비공개 여부를 불리언으로 나타냅니다.')),
                ('views', models.PositiveIntegerField(default=0, help_text='조회수를 의미합니다.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='점주가 쿠폰 템플릿을 등록한 날짜와 시간입니다.')),
            ],
        ),
        migrations.CreateModel(
            name='LegalDistrict',
            fields=[
                ('code_in_law', models.CharField(help_text='법정동 코드입니다. 예) 1123011000', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('province', models.CharField(help_text='광역시, 도 단위입니다. 예) 서울특별시', max_length=8)),
                ('city', models.CharField(help_text='시, 군, 구 단위입니다. 예) 동대문구', max_length=5)),
                ('district', models.CharField(help_text='읍, 면, 동 단위입니다. 예) 이문동', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('receipt_number', models.CharField(help_text='영수증 번호입니다. 중복되지 않습니다.', max_length=30, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='점주에 의해 영수증이 등록된 날짜와 시간입니다.')),
            ],
        ),
        migrations.CreateModel(
            name='CouponBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(help_text='쿠폰북을 소유한 유저 id입니다.', on_delete=django.db.models.deletion.CASCADE, related_name='couponbook', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True, help_text='쿠폰을 등록한 날짜와 시간입니다.')),
                ('couponbook', models.ForeignKey(help_text='해당 쿠폰이 등록되어 있는 쿠폰북 id입니다.', on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='couponbook.couponbook')),
                ('original_template', models.ForeignKey(help_text='쿠폰 발행에 사용된 쿠폰 템플릿 id입니다. 유효성 검증에 사용합니다.', on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='couponbook.coupontemplate')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, help_text='즐겨찾기에 등록한 날짜와 시간입니다.')),
                ('coupon', models.OneToOneField(help_text='즐겨찾기 등록한 쿠폰 id입니다.', on_delete=django.db.models.deletion.CASCADE, to='couponbook.coupon')),
                ('couponbook', models.ForeignKey(help_text='해당 쿠폰이 등록되어 있는 쿠폰북 id입니다.', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_coupons', to='couponbook.couponbook')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='가게 이름입니다.', max_length=20)),
                ('address_rest', models.CharField(help_text='지번 포함 나머지 주소 부분입니다. 예) 107', max_length=15)),
                ('lat', models.DecimalField(blank=True, decimal_places=15, help_text='위도입니다. 데이터 저장 시 자동 게산됩니다.', max_digits=18, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=15, help_text='경도입니다. 데이터 저장 시 자동 계산됩니다.', max_digits=18, null=True)),
                ('image_url', models.URLField(help_text='가게의 이미지가 담겨 있는 URL입니다.')),
                ('opens_at', models.TimeField(help_text='영업 시작 시간입니다.')),
                ('closes_at', models.TimeField(help_text='영업 종료 시간입니다.')),
                ('last_order', models.TimeField(help_text='라스트오더 시간입니다.')),
                ('tel', models.CharField(help_text='가게 전화번호입니다.', max_length=20)),
                ('address_district', models.OneToOneField(help_text='가게의 법정동 부분까지의 주소입니다. 예) 서울특별시 동대문구 이문동', on_delete=django.db.models.deletion.CASCADE, related_name='place', to='couponbook.legaldistrict')),
                ('owner', models.OneToOneField(blank=True, help_text='이 매장의 점주 사용자입니다.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='place', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='coupontemplate',
            name='place',
            field=models.ForeignKey(help_text='해당 쿠폰과 연관된 매장 id입니다.', on_delete=django.db.models.deletion.CASCADE, related_name='coupon_templates', to='couponbook.place'),
        ),
        migrations.CreateModel(
            name='RewardsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='리워드를 지급하는 스탬프 횟수입니다.')),
                ('reward', models.CharField(help_text='어떤 혜택이 있는지를 의미합니다.', max_length=100)),
                ('coupon_template', models.OneToOneField(help_text='어떤 쿠폰 템플릿 id에 있는 리워드 정보인지를 의미합니다.', on_delete=django.db.models.deletion.CASCADE, related_name='reward_info', to='couponbook.coupontemplate')),
            ],
        ),
        migrations.CreateModel(
            name='Stamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='스탬프가 적립된 날짜와 시간입니다.')),
                ('coupon', models.ForeignKey(help_text='어떤 쿠폰 id에 적립된 스탬프인지를 의미합니다.', on_delete=django.db.models.deletion.CASCADE, related_name='stamps', to='couponbook.coupon')),
                ('customer', models.ForeignKey(help_text='스탬프를 적립받은 고객 id입니다.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('receipt', models.OneToOneField(help_text='해당 스탬프의 적립 근거가 되는 영수증 번호입니다.', on_delete=django.db.models.deletion.CASCADE, related_name='stamp', to='couponbook.receipt')),
            ],
        ),
    ]
