version: '3'
services:
  web:
    # build 추가
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    command: ["/app/.venv/bin/gunicorn","modelproject.wsgi:application","-b","0.0.0.0:8000","--workers","3","--timeout","60","--access-logfile","-","--error-logfile","-"]
    # bash -c "gunicorn modelproject.wsgi:application -b 0.0.0.0:8000" # 서버 실행
    ports:
      - "8000:8000"
    restart: always
    volumes:
      # - .:/app
      - ./static:/app/static
      - ./media:/app/media # media가 있으면
    networks: [server]

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.default.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static:ro
      - ./media:/media:ro  # media가 있으면
      - ./cert/certbot/conf:/etc/letsencrypt # 인증서 발급
      - ./cert/certbot/www:/var/www/certbot # 인증서 발급
    restart: always # unless-stopped -> always 변경
    ports:
      - "80:80"
      - "443:443" # 추가
    depends_on:
      - web
    networks:
      - server
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  
  # SSL 인증서 관련 데이터 저장
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./cert/certbot/conf:/etc/letsencrypt 
      - ./cert/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $$!; done;'"
    # certbot 컨테이너 12시간마다 백그라운드에서 갱신 -> Status에서 Up 상태 유지
networks:
  server: